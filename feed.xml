<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://hb9hox.radio/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hb9hox.radio/" rel="alternate" type="text/html" /><updated>2022-04-27T12:26:59-05:00</updated><id>https://hb9hox.radio/feed.xml</id><title type="html">Christian HB9HOX</title><author><name>Christian HB9HOX</name></author><entry xml:lang="de"><title type="html">Vereinfachte Verwendung von Audiogeräte für digitale Modi</title><link href="https://hb9hox.radio/de/2022-04-27-digitale-modi-und-audiogeraete.html" rel="alternate" type="text/html" title="Vereinfachte Verwendung von Audiogeräte für digitale Modi" /><published>2022-04-27T00:00:00-05:00</published><updated>2022-04-27T00:00:00-05:00</updated><id>https://hb9hox.radio/de/digitale-modi-und-audiogeraete</id><content type="html" xml:base="https://hb9hox.radio/de/2022-04-27-digitale-modi-und-audiogeraete.html"><![CDATA[<div class="paragraph">
<p>Das Arbeiten mit digitalen Modi erfolgt normalerweise durch Koppeln eines Computers mit einem Transceiver.
Dies beinhaltet meistens eine Art Audiogerät, welches dann verwendet wird, um Audio vom Transceiver an die Software weiterzuleiten, die die digitalen Dinge erledigt, und umgekehrt.
Dokumentationen zu verschiedenen digitale Modi, erklärt, wie Sie komplizierte Schritte und kryptische Gerätenamen verwenden, um das Ziel zu erreichen.
Aber dem muss nicht so sein.
Dieser Artikel gibt einen Überblick über die Linux-Audiolandschaft und wie digitale Modi komfortabler genutzt werden können.</p>
</div>
<div class="paragraph">
<p>Angenommen, du hast zwei Lautsprecher und einen Audioplayer.
Um Audio zu hören, muss ein Kabel zwischen einem Lautsprecher und dem Player angeschlossen werden.
Um nun Audio auf dem anderen Lautsprecher zu hören, muss das Kabel am einen Lautsprecher herausgezogen und am anderen wieder angeschlossen werden.
Jetzt stell dir vor, du bekommst ein paar zusätzliche Player und Lautsprecher.
Möglicherweise sogar auch einige Geräte zum beeinflussen des Tons (Filter, Effekte), die zwischen einem Player und einem Lautsprecher zu platzieren sind.</p>
</div>
<div class="paragraph">
<p>Das ständige Umstecken von Kabeln von einem Gerät zum anderen wird schnell lästig werden.
Und mit  immer mehr Geräten wird es vermutlich chaotisch und Fehler sind schnell gemacht.</p>
</div>
<div class="paragraph">
<p>Die Lösung dafür ist ein Mischpult.
An dieses Mischpult werden dann alle Zuspieler, Filter, Effekte und Lautsprecher angeschlossen.
Mit Tasten, Schiebe- und Drehregler, ermöglicht das Mischpult, die Lautstärke und den Fluss des Audiosignals von der Quelle zum Ziel zu steuern.</p>
</div>
<div class="paragraph">
<p>Mit diesem Bild im Hinterkopf, lass uns mal ein Blick auf die gängigen Dokumentationen zu digitalen Modi anschauen.</p>
</div>
<div class="paragraph">
<p>Diese sprechen davon, <code>aplay -l</code> oder <code>arecord -l</code> zu verwenden und die Karten- und Gerätenummer  des zu verwendenden Audio-Interface zu identifizieren.
Daraus muss dann eine Hardwarekennung zusammengesetzt werden, die dann zu verwenden ist, um das Programm zu konfigurieren.</p>
</div>
<div class="paragraph">
<p>Das ist wie unsere Analogie von oben, und es wird noch schlimmer.
Wann immer zu einem anderen Gerät gewechselt werden soll, muss:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>das Programm beendet werden</p>
</li>
<li>
<p>das neue Gerät identifiziert werden</p>
</li>
<li>
<p>die Konfiguration geändert werden</p>
</li>
<li>
<p>das Programm gestartet werden</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Auch muss sichergestellt sein, dass niemals zwei Programme parallel laufen, die dasselbe Audiogerät verwenden.</p>
</div>
<div class="paragraph">
<p>Das geht aber auch einfacher.
Wie in der obigen Analogie können wir ein Mischpult verwenden.
So ein Mischpult ist ein Tool namens PulseAudio.
Und in jüngerer Zeit bringt sich PipeWire in Stellung, PulseAudio zu ersetzen.</p>
</div>
<div class="paragraph">
<p>Und wie funktioniert das nun?
Ganz einfach, verwende einfach <code>default</code> als ALSA-Geräte-ID.
Verwende dann <code>pavucontrol</code>, um die eigentlichen Eingabe- und Ausgabegeräte zu konfigurieren.</p>
</div>
<div class="paragraph">
<p>In meiner Dire-Wolf-Konfiguration steht <code>ADEVICE default</code>.
Sobald Dire Wolf gestartet ist, öffne ich PulseAudio Volume Control (<code>pavucontrol</code>) und überprüfe, ob es mit dem richtigen Gerät verbunden ist.
Im Beispiel unten ist zu sehen, dass der Ausgang mit „PCM2903B Audio Codec Analog Stereo“ verbunden ist, meinem Yaesu FT-991A.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="/images/pavucontrol-playback.png" alt="pavucontrol playback">
</div>
</div>
<div class="paragraph">
<p>Gleiches gilt für die Eingabe.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="/images/pavucontrol-recording.png" alt="pavucontrol recording">
</div>
</div>
<div class="paragraph">
<p>Will ich jedoch zu meinem Lab599 Discovery TX-500 zu wechseln, dieses verbinde ich mit einer Digirig-Soundkarte, öffne ich einfach <code>pavucontrol</code> und ändere sowohl das Aufnahme- als auch das Wiedergabegerät für Dire Wolf.
Dazu muss ich Dire Wolf nicht einmal neu starten.</p>
</div>
<div class="paragraph">
<p>Dasselbe funktioniert auch für Ardop (verwende <code>ardopc 8515 default default</code>), Fldigi und Wsjtx.</p>
</div>
<div class="admonitionblock note">
<i class="icon icon-note fas fa-info-circle fa-pull-left fa-2x" title=""></i>
<div class="paragraph">
<p>Der Wiedergabeport von WSJTX wird nur zu sehen, solange Audio ausgegeben wird.
Verwende Tune in WSJTX, um einen konstanten Ton zu senden, womit der Wiedergabeport sichtbar wird, und den richtigen Ausgang eingestellt werden kann.
Die zuletzt gemacht Einstellung wird beibehalten, wenn der Port für einen Sendezyklus erscheint.</p>
</div>
</div>]]></content><author><name>Christian HB9HOX</name></author><summary type="html"><![CDATA[Das Arbeiten mit digitalen Modi erfolgt normalerweise durch Koppeln eines Computers mit einem Transceiver. Dies beinhaltet meistens eine Art Audiogerät, welches dann verwendet wird, um Audio vom Transceiver an die Software weiterzuleiten, die die digitalen Dinge erledigt, und umgekehrt. Dokumentationen zu verschiedenen digitale Modi, erklärt, wie Sie komplizierte Schritte und kryptische Gerätenamen verwenden, um das Ziel zu erreichen. Aber dem muss nicht so sein. Dieser Artikel gibt einen Überblick über die Linux-Audiolandschaft und wie digitale Modi komfortabler genutzt werden können.]]></summary></entry><entry xml:lang="en"><title type="html">A better way to handle audio devices for digital modes</title><link href="https://hb9hox.radio/en/2022-04-26-digital-modes-and-audio-devices.html" rel="alternate" type="text/html" title="A better way to handle audio devices for digital modes" /><published>2022-04-26T00:00:00-05:00</published><updated>2022-04-26T00:00:00-05:00</updated><id>https://hb9hox.radio/en/digital-modes-and-audio-devices</id><content type="html" xml:base="https://hb9hox.radio/en/2022-04-26-digital-modes-and-audio-devices.html"><![CDATA[<div class="paragraph">
<p>Working with digital modes, usually, is done by paring a computer with a transceiver.
This mostly involves some sort of audio device.
That audio device then is used to pass audio from the transceiver to the software doing the digital stuff, and the other way around.
Documentations for various digital modes, explains to you how to use complicated steps and cryptic devices names to get the job done.
But it does not have to be that way.
This article gives you an overview of the Linux audio landscape and how you can use digital modes more comfortably.</p>
</div>
<div class="paragraph">
<p>Consider you have two loudspeakers and one audio player.
To listen to that audio, you have to plug in a cable between one loudspeaker and the audio player.
When ever you want to hear that audio on the other loudspeaker, you pull out the cable and plug it in to that other loudspeaker.
Now imagine, you get some more players and some more loudspeakers.
You might even get some devices to change the audio (filters, effects) which you have to place between a player and a loudspeaker.</p>
</div>
<div class="paragraph">
<p>Constantly having to move cables from one device to another can get annoying pretty fast.
And with more and more devices involved, it is likely to get chaotic and errors are easily made.</p>
</div>
<div class="paragraph">
<p>The solution for this would be, to get yourself a mixing console in between.
You will then connect all players, filters, effects and loudspeakers to that mixing console.
The mixing console then allows you to use buttons, faders and knobs to control the flow and volume of the audio signal from its source to its destination.</p>
</div>
<div class="paragraph">
<p>With that in mind, let us have a look at what most documentation related to digital modes tells you to do.</p>
</div>
<div class="paragraph">
<p>You are taught to use <code>aplay -l</code> or <code>arecord -l</code> and identify the card and device number for the audio interface you intend to use.
You then have to build yourself a hardware identifier, you then have to use to configure your program.</p>
</div>
<div class="paragraph">
<p>This is like our analogy from above, and it gets even worse.
When ever you want to switch to another device, you have to:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Stop program</p>
</li>
<li>
<p>Identify the other device</p>
</li>
<li>
<p>Change configuration</p>
</li>
<li>
<p>Start program</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>You also have to ensure, you never start two programs in parallel configured to use the same audio device.</p>
</div>
<div class="paragraph">
<p>But there is a better way to do this.
Like with in the above analogy, we can use a mixing console in between.
That mixing console is a tool called PulseAudio.
And more recently, PipeWire brings itself into position to replace PulseAudio.</p>
</div>
<div class="paragraph">
<p>So how does this work, then?
Easy, just use <code>default</code> for your ALSA device IDs.
Then use <code>pavucontrol</code> to configure the actual input and output devices.</p>
</div>
<div class="paragraph">
<p>In my Dire Wolf configuration, I have <code>ADEVICE default</code>.
Once Dire Wolf is running, I open PulseAudio Volume Control (<code>pavucontrol</code>) and check if it is linked to the correct device.
In the example below, you see its output is connected to <code>PCM2903B Audio Codec Analog Stereo</code> which is my Yaesu FT-991A.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="/images/pavucontrol-playback.png" alt="pavucontrol playback">
</div>
</div>
<div class="paragraph">
<p>The same goes for the input.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="/images/pavucontrol-recording.png" alt="pavucontrol recording">
</div>
</div>
<div class="paragraph">
<p>Should I choose to switch to my Lab599 Discovery TX-500 which I connect using a Digirig sound card, I just open <code>pavucontrol</code> and change both, the capture and playback device for Dire Wolf.
I do not even have to restart Dire Wolf to do so.</p>
</div>
<div class="paragraph">
<p>The same also works for Ardop (use <code>ardopc 8515 default default</code>), Fldigi, and Wsjtx.</p>
</div>
<div class="admonitionblock note">
<i class="icon icon-note fas fa-info-circle fa-pull-left fa-2x" title=""></i>
<div class="paragraph">
<p>The playback device of WSJTX only shows up as long as it is sending audio.
You can use Tune in WSJTX to send a constant tone, giving you the chance to set the correct output.
It will remember its last setting when ever it pops up for a transmit cycle.</p>
</div>
</div>]]></content><author><name>Christian HB9HOX</name></author><summary type="html"><![CDATA[Working with digital modes, usually, is done by paring a computer with a transceiver. This mostly involves some sort of audio device. That audio device then is used to pass audio from the transceiver to the software doing the digital stuff, and the other way around. Documentations for various digital modes, explains to you how to use complicated steps and cryptic devices names to get the job done. But it does not have to be that way. This article gives you an overview of the Linux audio landscape and how you can use digital modes more comfortably.]]></summary></entry></feed>